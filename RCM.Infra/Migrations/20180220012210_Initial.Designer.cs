// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RCM.Infra.Models;
using System;

namespace RCM.Infra.Migrations
{
    [DbContext(typeof(RCMDbContext))]
    [Migration("20180220012210_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RCM.Domain.Models.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CodigoCompensacao");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("RCM.Domain.Models.Cheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Agencia");

                    b.Property<int?>("BancoId");

                    b.Property<int?>("ClienteId");

                    b.Property<string>("Conta");

                    b.Property<DateTime>("DataEmissao");

                    b.Property<DateTime?>("DataPagamento");

                    b.Property<DateTime>("DataVencimento");

                    b.Property<string>("NumeroCheque");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Cheques");
                });

            modelBuilder.Entity("RCM.Domain.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EstadoId");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("RCM.Domain.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("RCM.Domain.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClienteId");

                    b.Property<string>("Nome");

                    b.Property<string>("Observacao");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("RCM.Domain.Models.Duplicata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataEmissao");

                    b.Property<DateTime?>("DataPagamento");

                    b.Property<DateTime>("DataVencimento");

                    b.Property<int?>("FornecedorId");

                    b.Property<string>("NotaFiscal");

                    b.Property<int?>("NotaFiscalId");

                    b.Property<string>("NumeroDocumento");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("NotaFiscalId");

                    b.ToTable("Duplicatas");
                });

            modelBuilder.Entity("RCM.Domain.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("CEP");

                    b.Property<int?>("CidadeId");

                    b.Property<int?>("ClienteId");

                    b.Property<string>("Complemento");

                    b.Property<int>("Numero");

                    b.Property<string>("Rua");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("RCM.Domain.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("RCM.Domain.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("RCM.Domain.Models.NotaFiscal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataChegada");

                    b.Property<DateTime>("DataEmissao");

                    b.Property<int?>("FornecedorId");

                    b.Property<string>("NumeroDocumento");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("NotasFiscais");
                });

            modelBuilder.Entity("RCM.Domain.Models.Cheque", b =>
                {
                    b.HasOne("RCM.Domain.Models.Banco", "Banco")
                        .WithMany()
                        .HasForeignKey("BancoId");

                    b.HasOne("RCM.Domain.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("RCM.Domain.Models.Cidade", b =>
                {
                    b.HasOne("RCM.Domain.Models.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId");
                });

            modelBuilder.Entity("RCM.Domain.Models.Contato", b =>
                {
                    b.HasOne("RCM.Domain.Models.Cliente")
                        .WithMany("Contatos")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("RCM.Domain.Models.Duplicata", b =>
                {
                    b.HasOne("RCM.Domain.Models.Fornecedor", "Fornecedor")
                        .WithMany("Duplicatas")
                        .HasForeignKey("FornecedorId");

                    b.HasOne("RCM.Domain.Models.NotaFiscal")
                        .WithMany("Duplicatas")
                        .HasForeignKey("NotaFiscalId");
                });

            modelBuilder.Entity("RCM.Domain.Models.Endereco", b =>
                {
                    b.HasOne("RCM.Domain.Models.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId");

                    b.HasOne("RCM.Domain.Models.Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("RCM.Domain.Models.NotaFiscal", b =>
                {
                    b.HasOne("RCM.Domain.Models.Fornecedor")
                        .WithMany("NotasFiscais")
                        .HasForeignKey("FornecedorId");
                });
#pragma warning restore 612, 618
        }
    }
}
